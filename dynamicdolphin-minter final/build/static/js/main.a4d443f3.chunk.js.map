{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalMintAmount","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledImg","img","StyledImg1","StyledImg2","StyledImg3","StyledImg4","StyledImg5","StyledLink","App","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","id","style","padding","backgroundColor","flexDirection","fixed","color","alt","src","transform","textAlign","fontSize","fontWeight","fontFamily","href","borderRadius","boxShadow","border","target","Number","onClick","e","preventDefault","abiResponse","abi","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","location","reload","lineHeight","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","gasLimit","totalCostWei","String","totalGasLimit","mintDolphin","send","to","from","value","once","err","then","receipt","claimNFTs","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4d443f3.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalMintAmount: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalMintAmount: action.payload.totalMintAmount,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalMintAmount = await store\n        .getState()\n        .blockchain.smartContract.methods.totalMintAmount()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalMintAmount,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        //dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: white;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  Navbar,\n  NavItem,\n  NavbarToggler,\n  Collapse,\n  NavLink,\n  Nav,\n  NavbarBrand\n} from 'reactstrap';\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: #89cff0};\n  background-image: linear-gradient(to right, #16a4fd 0%, #41faa4 100%);\n}\n  padding: 20px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 200px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color:.text #89cff0};\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: blue};\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 10px;\n  @media (min-width: 767px) {\n    width: 20px;\n    height: 20px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0);\n  border: 1px var(--secondary);\n  background-color: var(--accent);\n  border-radius: 10%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 370px;\n  }\n  transition: width 0.5s;\n`;\nexport const StyledImg1 = styled.img`\n  \n  \n padding: 0;\n  \n  width: 1000px;\n  @media (min-width: 900px) {\n    width: 1000px;\n  }\n  @media (min-width: 1000px) {\n    width: 1000px;\n  }\n  transition: width 0.5s;\n`;\nexport const StyledImg2 = styled.img`\n  \n  \n padding: 0;\n  \n  width: 100px;\n  @media (min-width: 900px) {\n    width: 200px;\n  }\n  @media (min-width: 1000px) {\n    width: 350px;\n  }\n  transition: width 0.5s;\n`;\nexport const StyledImg3 = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0);\n  border: 1px var(--secondary);\n  background-color: var(--accent);\n  border-radius: 10%;\n  width: 20px;\n  @media (min-width: 900px) {\n    width: 20px;\n  }\n  @media (min-width: 1000px) {\n    width: 25px;\n  }\n  transition: width 0.5s;\n`;\nexport const StyledImg4 = styled.img`\n  \n  \n padding: 0;\n border-radius: 100%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 200px;\n  }\n  @media (min-width: 1000px) {\n    width: 250px;\n  }\n  transition: width 0.5s;\n`;\nexport const StyledImg5 = styled.img`\n  \n  \npadding: 0;\n  \n  width: 1000px;\n  @media (min-width: 900px) {\n    width: 1000px;\n  }\n  @media (min-width: 1000px) {\n    width: 100%;\n  }\n  transition: width 0.5s;\n`;\nexport const StyledLink = styled.a`\n  color: blue;\n  text-decoration: none;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n  \n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mintDolphin(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 10) {\n      newMintAmount = 10;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n  \n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <s.Screen>\n      \n      <s.Container\n        flex={1}\n        ai={\"center\"}\n        id=\"Home\"\n        style={{ padding: 0, backgroundColor: \"#4da3ff\", flexDirection:\"column\" }}\n      >\n        <Navbar fixed= \"top\" color=\"\"  >\n        <s.Container flex={2} style={{ padding: 20, backgroundColor: \"#007bff\", flexDirection:\"row\" }}>\n        <s.Container flex={.06}>\n        <StyledImg3\n              alt={\"example\"}\n              src={\"/config/images/example.png\"}\n              style={{ transform: \"scaleX(1)\" }}\n            />\n        </s.Container>\n        <s.Container flex={1}>\n        \n          <s.TextTitle\n              style={{\n                textAlign: \"left\",\n                fontSize: 15,\n                fontWeight: \"bold\",\n                color: \"white\",\n                fontFamily:\"Poppins, sans-serif\"\n              \n\n              }}\n            >\n            DYNAMIC DOLPHINS\n            </s.TextTitle></s.Container>\n        <s.Container flex={.09}><a href=\"#Home\" >\n            <s.TextTitle\n              style={{\n                textAlign: \"left\",\n                fontSize: 15,\n                fontWeight: \"bold\",\n                color: \"white\",\n                fontFamily:\"Poppins, sans-serif\"\n              \n\n              }}\n            >HOME</s.TextTitle>\n              </a></s.Container>\n        \n        <s.Container flex={.1}> <a href=\"#About\" >\n            <s.TextTitle\n              style={{\n                textAlign: \"left\",\n                fontSize: 15,\n                fontWeight: \"bold\",\n                color: \"white\",\n                fontFamily:\"Poppins, sans-serif\"\n              \n\n              }}\n            >ABOUT</s.TextTitle>\n              </a></s.Container>\n        <s.Container flex={.12}>\n            <a href=\"#Lorem_Ipsum\" >\n            <s.TextTitle\n              style={{\n                textAlign: \"left\",\n                fontSize: 15,\n                fontWeight: \"bold\",\n                color: \"white\",\n                fontFamily:\"Poppins, sans-serif\"\n              \n\n              }}\n            >ROADMAP</s.TextTitle>\n              </a>\n          </s.Container>\n        <s.Container flex={.09}><a href=\"#Team\" >\n            <s.TextTitle\n              style={{\n                textAlign: \"left\",\n                fontSize: 15,\n                fontWeight: \"bold\",\n                color: \"white\",\n                fontFamily:\"Poppins, sans-serif\"\n              \n\n              }}\n            >TEAM</s.TextTitle>\n              </a></s.Container>\n        \n        <s.Container flex={.12}><a href=\"https://discord.com/\" >\n            <s.TextTitle\n              style={{\n                textAlign: \"left\",\n                fontSize: 15,\n                fontWeight: \"bold\",\n                color: \"white\",\n                fontFamily:\"Poppins, sans-serif\"\n              \n\n              }}\n            >DISCORD</s.TextTitle>\n              </a></s.Container>\n        <s.Container flex={.1}><a href=\"https://twitter.com/Social_Dolphins\" >\n            <s.TextTitle\n              style={{\n                textAlign: \"left\",\n                fontSize: 15,\n                fontWeight: \"bold\",\n                color: \"white\",\n                fontFamily:\"Poppins, sans-serif\"\n              \n\n              }}\n            >TWITTER</s.TextTitle>\n              </a></s.Container>\n        </s.Container>\n                \n            </Navbar>\n         \n       \n        <s.SpacerLarge />\n        <s.SpacerLarge />\n        <s.SpacerLarge />\n       \n       \n        \n        <s.Container flex={1} jc={\"center\"} ai={\"center\"} fd={\"row\"}>\n        <s.Container flex={.3} jc={\"center\"} ai={\"center\"} fd={\"column\"}>\n        </s.Container>\n\n        <s.Container flex={.7} jc={\"center\"} ai={\"center\"} fd={\"column\"}>\n          \n        <s.Container flex={2} jc={\"center\"} ai={\"left\"} >\n        <s.TextTitle\n              style={{\n                textAlign: \"left\",\n                fontSize: 35,\n                fontWeight: \"bold\",\n                color: \"white\",\n                fontFamily:\"Poppins, sans-serif\"\n              \n\n              }}\n            >\n              <s.SpacerLarge /><s.SpacerLarge />\n            Dynamic Dolphins\n            </s.TextTitle>\n          </s.Container>\n          \n          <s.Container flex={1} jc={\"center\"} ai={\"left\"}>\n          <s.SpacerLarge />\n          <s.TextTitle\n              style={{\n                textAlign: \"left\",\n                fontSize: 20,\n                fontWeight: \"\",\n                color: \"white\",\n                fontFamily:\"Poppins, sans-serif\"\n\n              }}\n            >\n          5,000 Community-Driven Dynamic Dolphins\n          </s.TextTitle>\n          <s.TextTitle\n              style={{\n                textAlign: \"left\",\n                fontSize: 20,\n                fontWeight: \"\",\n                color: \"white\",\n                fontFamily:\"Poppins, sans-serif\"\n\n              }}\n            >\n          depart for Polygon soon!\n          <s.SpacerLarge />\n          </s.TextTitle>\n          <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"#ffce88\",\n              padding: 24,\n              borderRadius: 24,\n             \n              boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n            }}\n          >\n            <s.TextTitle\n          style={{\n            textAlign: \"left\",\n            fontSize: 30,\n            fontWeight: \"bold\",\n            color: \"white\",\n            fontFamily:\"Poppins, sans-serif\"\n\n          }}\n        >\n      Dynamic Dolphins - 3 Matic\n      \n      </s.TextTitle>\n              \n              <ResponsiveWrapper flex={1} style={{ padding: 24, color:\"#ffc107\" }} test>\n          <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"clear\",\n              padding: 5,\n              borderRadius: 0,\n              border: \"0px var(--secondary)\",\n              boxShadow: \"0px 0px 0px 0px rgba(0,0,0,0.7)\",\n            }}\n          >\n            \n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 50,\n                fontWeight: \"bold\",\n                color: \"\",\n              }}\n            >\n              \n          \n            </s.TextTitle>\n            <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                color: \"#ffc107\",\n              }}\n            >\n              <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n                \n              </StyledLink>\n            </s.TextDescription>\n            <s.SpacerSmall />\n            {Number(data.totalMintAmount) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"#ffc107\" }}\n                >\n                  The sale has ended.\n                </s.TextTitle>\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"#ffc107\" }}\n                >\n                  You can still find {CONFIG.NFT_NAME} on\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE}\n                </StyledLink>\n              </>\n            ) : (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                \n                </s.TextTitle>\n                <s.SpacerXSmall />\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                 \n                </s.TextDescription>\n                <s.SpacerSmall />\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      Connect to the {CONFIG.NETWORK.NAME} network\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT\n                    </StyledButton>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  <>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      {feedback}\n                    </s.TextDescription>\n                    <s.SpacerMedium />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4 }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          decrementMintAmount();\n                        }}\n                      >\n                        -\n                      </StyledRoundButton>\n                      <s.SpacerMedium />\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        {mintAmount}\n                      </s.TextDescription>\n                      <s.SpacerMedium />\n                      <StyledRoundButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          incrementMintAmount();\n                        }}\n                      >\n                        +\n                      </StyledRoundButton>\n                    </s.Container>\n                    <s.SpacerSmall />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimNFTs();\n                          getData();\n                        }}\n                      >\n                        {claimingNft ? \"BUSY\" : \"BUY\"}\n                      </StyledButton>\n                    </s.Container>\n                  </>\n                )}\n              </>\n            )}\n            <s.SpacerMedium />\n          </s.Container>\n          <s.SpacerLarge />\n          \n        </ResponsiveWrapper>\n              </s.Container>\n    \n   \n          </s.Container>\n          </s.Container>\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n          <s.SpacerMedium />\n          <s.SpacerMedium />\n          <s.SpacerMedium />\n          <StyledImg\n              alt={\"example\"}\n              src={\"/config/images/example.png\"}\n              style={{ transform: \"scaleX(1)\" }}\n            />\n          </s.Container>\n          <s.Container flex={.2} jc={\"center\"} ai={\"center\"} fd={\"column\"}>\n        </s.Container>\n          </s.Container>\n         \n          <s.SpacerLarge />\n          \n        <s.SpacerMedium />\n        \n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            \n          </s.TextDescription>\n          <s.SpacerSmall />\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n           \n          </s.TextDescription>\n          \n        </s.Container>\n        \n        <s.Container flex={.2} jc={\"center\"} ai={\"center\"} fd={\"column\"} backgroundColor={\"white\"} color={\"white\"}>\n      \n        </s.Container>\n        \n        <StyledImg5\n              alt={\"example\"}\n              src={\"/config/images/mask.png\"}\n              style={{ transform: \"scaleX(1)\" }}\n            />\n      </s.Container>\n      <s.Container flex={2} jc={\"center\"} ai={\"center\"} fd={\"row\"} backgroundColor={\"white\"} color={\"white\"} id=\"About\">\n      <s.Container flex={2} jc={\"center\"} ai={\"center\"} fd={\"column\"} backgroundColor={\"white\"} color={\"white\"}>\n      <s.SpacerLarge />\n      <s.SpacerLarge />\n      <s.SpacerLarge />\n      <StyledImg2\n              alt={\"example\"}\n              src={\"/config/images/back.png\"}\n              style={{ transform: \"scaleX(1)\" }}\n            />\n              <s.SpacerLarge />\n      <s.SpacerLarge />\n      <s.SpacerLarge />\n      </s.Container>\n      <s.Container flex={2} jc={\"center\"} ai={\"center\"} fd={\"column\"} backgroundColor={\"white\"} color={\"white\"}>\n\n    <s.TextTitle\n              style={{\n                textAlign: \"left\",\n                fontSize: 30,\n                fontWeight: \"bold\",\n                color: \"#1b30a4\",\n                fontFamily:\"Poppins, sans-serif\"\n              \n\n              }}\n            >\n            What are Dynamic Dolphins?\n            </s.TextTitle>\n            <s.SpacerLarge />\n            <s.TextTitle\n              style={{\n                textAlign: \"left\",\n                fontSize: 15,\n                fontWeight: \"\",\n                color: \"black\",\n                fontFamily:\"Poppins, sans-serif\"\n              \n\n              }}\n            >\n            Dynamic Dolphins are a collection of 5,000 high-quality dolphins, each unique in their own way. We are community-led with a focus on creating long-term benefits for our holders and making an extraordinary impact on Dolphin exploitation and conservation.\n            </s.TextTitle>\n            \n            \n        </s.Container>\n        <s.Container flex={1} jc={\"center\"} ai={\"center\"} fd={\"column\"} backgroundColor={\"white\"} color={\"white\"}>\n            </s.Container>\n            \n        </s.Container>\n        <s.Container\n        flex={1}\n        id=\"Lorem_Ipsum\"\n        ai={\"center\"}\n        style={{ padding: 20, backgroundColor: \"#BBDBF7\", flexDirection:\"column\" }}\n      >\n         <StyledImg1\n              alt={\"example\"}\n              src={\"/config/images/road.png\"}\n              style={{ transform: \"scaleX(1)\" }}\n            />\n        </s.Container>\n       \n        <s.Container\n        flex={1}\n        ai={\"center\"}\n        id=\"Team\"\n        style={{ padding: 20, backgroundColor: \"#BBDBF7\", flexDirection:\"column\" }}\n      >\n          <s.SpacerLarge />\n        <s.SpacerLarge />\n        <s.SpacerLarge />\n        \n        <s.SpacerLarge />\n        <s.SpacerLarge />\n        <s.TextTitle\n              style={{\n                textAlign: \"left\",\n                fontSize: 30,\n                fontWeight: \"bold\",\n                color: \"white\",\n                fontFamily:\"Poppins, sans-serif\"\n              \n\n              }}\n            >\n            OUR TEAM\n            </s.TextTitle>\n            <s.SpacerLarge />\n        <s.SpacerLarge />\n       \n        <s.SpacerLarge />\n        </s.Container>\n        \n        <s.Container\n        flex={1}\n        ai={\"center\"}\n        style={{ padding: 20, backgroundColor: \"#BBDBF7\", flexDirection:\"row\" }}\n      >\n        <s.Container flex={.4}></s.Container>\n        <s.Container flex={.1}><StyledImg4\n              alt={\"example\"}\n              src={\"/config/images/person1.png\"}\n              style={{ transform: \"scaleX(1)\" }}\n            />\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 15,\n                fontWeight: \"bold\",\n                color: \"white\",\n                fontFamily:\"Poppins, sans-serif\"\n              \n\n              }}\n            >\n            Lucian - Programming Director\n            </s.TextTitle>\n            <s.SpacerLarge />\n        <s.SpacerLarge />\n            </s.Container>\n            <s.Container flex={.1}></s.Container>\n        <s.Container flex={.1}><StyledImg4\n              alt={\"example\"}\n              src={\"/config/images/person2.png\"}\n              style={{ transform: \"scaleX(1)\" }}\n            />\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 15,\n                fontWeight: \"bold\",\n                color: \"white\",\n                fontFamily:\"Poppins, sans-serif\"\n              \n\n              }}\n            >\n           Jenny - Solidity Programmer\n            </s.TextTitle>\n            <s.SpacerLarge />\n        <s.SpacerLarge />\n            </s.Container>\n            <s.Container flex={.1}></s.Container>\n        <s.Container flex={.6}>\n        <StyledImg4\n              alt={\"example\"}\n              src={\"/config/images/person3.png\"}\n              style={{ transform: \"scaleX(1)\" }}\n            />\n            \n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 15,\n                fontWeight: \"bold\",\n                color: \"white\",\n                fontFamily:\"Poppins, sans-serif\"\n              \n\n              }}\n            >\n            Abby - JavaScript Programmer\n            </s.TextTitle>\n            <s.SpacerLarge />\n        <s.SpacerLarge />\n        </s.Container>\n        \n      </s.Container>\n      \n      <s.Container\n        flex={1}\n        ai={\"center\"}\n        style={{ padding: 20, backgroundColor: \"#ffce88\", flexDirection:\"column\" }}\n      >\n        <s.SpacerLarge />\n         <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 25,\n                fontWeight: \"bold\",\n                color: \"white\",\n                fontFamily:\"Poppins, sans-serif\"\n              \n\n              }}\n            >\n            Join Our Community\n            </s.TextTitle>\n            <s.SpacerLarge />\n            <s.SpacerLarge />\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 15,\n                fontWeight: \"\",\n                color: \"black\",\n                fontFamily:\"Poppins, sans-serif\"\n              \n\n              }}\n            >\n            Copyright © 2022, Dynamic Dolphins.\n\n            </s.TextTitle>\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 15,\n                fontWeight: \"\",\n                color: \"black\",\n                fontFamily:\"Poppins, sans-serif\"\n              \n\n              }}\n            >\n          All trademarks and copyrights belong to their respective owners.\n\n            </s.TextTitle>\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 15,\n                fontWeight: \"\",\n                color: \"black\",\n                fontFamily:\"Poppins, sans-serif\"\n              \n\n              }}\n            >\n          Built by Apex Digital Development\n\n            </s.TextTitle>\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 15,\n                fontWeight: \"\",\n                color: \"black\",\n                fontFamily:\"Poppins, sans-serif\"\n              \n\n              }}\n            >\n          All Content exists on the Polygon Blockchain\n\n            </s.TextTitle>\n        </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}